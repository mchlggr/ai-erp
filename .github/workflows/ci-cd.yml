name: CI/CD Very Simple Deployment

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v4
        with:
          version: 9

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      - run: pnpm dlx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="e2e-ci"

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - run: pnpm install --frozen-lockfile
      - uses: nrwl/nx-set-shas@v4

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: pnpm exec nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      - run: pnpm exec nx build flow-client

#  deploy:
#    name: Deploy
#    environment: development
#    runs-on: ubuntu-latest
#    needs: build
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#      - uses: actions/download-artifact@master
#        with:
#          name: flow-client-public
#          path: ./public
#      - name: Deploy to AWS EC2
#        run: echo "Starting Deployment"
#      - name: rsync deployments
#        uses: burnett01/rsync-deployments@7.0.0
#        with:
#          remote_host: ${{ secrets.AWS_EC2_PUBLIC_IP }}
#          remote_user: ${{ secrets.AWS_EC2_USER_NAME }}
#          remote_key: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}
#          remote_path: /app
#          switches: -avzr --delete
#          path: /
#      - name: executing remote deployment commands
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.AWS_EC2_PUBLIC_IP }}
#          username: ${{ secrets.AWS_EC2_USER_NAME }}
#          key: ${{ secrets.AWS_EC2_SSH_PRIVATE_KEY }}
#          port: 22
#          script:
#            echo "$(pwd)"
#            echo "$(ls)"
#            echo "$(ls /app)"
#            /app/serve.sh
#      - name: Deploy to Digital Ocean
#        run: echo "Ending Deployment"
